#Tomcat Embedded Server Configuration
server:
  port: 8080

#Zuul Configuration Properties
zuul:
  routes:
   echo-service:
     path: /echo/**
     url: http://eureka-server:8091

#Eureka Configuration Properties
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka
      
#server:
#port: 8080 #the default port used for zuul service


#eureka:
#  client:
#    instance:
#      preferIpAddress: 'true'
#    fetchRegistry: 'true'
#    registerWithEureka: 'true'
#    serviceUrl:
#      defaultZone: http://eureka-server:8761/eureka
#zuul:
#  routes:
#    account:
#      path: /account/**
#      serviceId: account-service

#eureka: 
#  client:
 #   serviceUrl:
  #    defaultZone: http://eureka-server:8761/eureka
      
# Option 0. Only zuul, with not services
#zuul:
#  ignoredServices: '*'
#  host:
#    connect-timeout-millis: 20000
#    socket-timeout-millis: 20000
#    routes:
#      sample-service: # Service to create as sample
 #       path: /sample/** #path that will be intercepted
 #       url: sample-service #which url the request will e mapped to
 #       stripPrefix: false  #if zuul should replace the "/sample/" segment
 #       sensitiveHeaders:

# Option 1: Routing via url:
# These simple url-routes do not get executed as a HystrixCommand, nor do they load-balance multiple URLs with Ribbon
# It just take all request to the path echo/ and fordward to the server localhost:8091
# zuul:
#   ignoredServices: '*'
 #  routes:
 #    echo-service:
 #      path: /echo/**
 #      url: http://eureka-server:8091

#Option 2: Chapter 5 - Another method is specifying a service-route and configuring a Ribbon client for the serviceId (doing so requires disabling Eureka support in Ribbon)
#zuul:
#  routes:
#    echo-service:
#      path: /echo/**
#      serviceId: echo-service
#ribbon:
#  eureka:
#    enabled: false

#echo-service:
#  ribbon:
#    listOfServers: http://localhost:8091,http://localhost:8092
